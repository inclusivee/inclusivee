generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id                Int                @id @default(autoincrement())
  email             String             @unique
  name              String
  password          String
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  type              String
  addresses         Address[]
  candidateProfiles CandidateProfile[]
  Experience        Experience[]
  Ability           Ability[]
  Education         Education[]
  ResumeProfile     ResumeProfile[]

  @@map("user")
}

model Address {
  idAddress Int      @id @default(autoincrement())
  zipcode   String?
  street    String?
  number    String?
  district  String?
  city      String?
  state     String?
  country   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id])

  @@map("address")
}

model CandidateProfile {
  idCandidateProfile Int     @id @default(autoincrement())
  fullName           String?
  birthday           String?
  cpf                String?
  rg                 String?
  phone              String?
  userId             Int

  user User @relation(fields: [userId], references: [id])

  @@map("profileCandidate")
}
model ResumeProfile {
  idResumeProfile Int     @id @default(autoincrement())
  resume           String?
  userId             Int

  user User @relation(fields: [userId], references: [id])

  @@map("resumeProfile")
}

model Experience {
  idExperience     Int     @id @default(autoincrement())
  jobTitle         String?
  companyName      String?
  startDate        String?
  endDate          String?
  responsibilities String?
  userId           Int

  user User @relation(fields: [userId], references: [id])

  @@map("experience")
}

model Ability {
  idAbility       Int     @id @default(autoincrement())
  nameAbility     String?
  experienceYears Int?
  userId          Int
  user            User    @relation(fields: [userId], references: [id])

  @@map("ability")
}

model Education {
  idEducation        Int     @id @default(autoincrement())
  degree             String?
  institution        String?
  startDateEducation String?
  endDateEducation   String?
  userId             Int

  user User @relation(fields: [userId], references: [id])

  @@map("education")
}
