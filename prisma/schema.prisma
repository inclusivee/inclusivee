generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id                Int                @id @default(autoincrement())
  email             String             @unique
  name              String
  password          String
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  type              String
  addresses         Address[]
  candidateProfiles CandidateProfile[]
  Experience        Experience[]
  Ability           Ability[]

  @@map("user")
}

model Address {
  idAddress Int      @id @default(autoincrement())
  zipcode   String
  street    String
  number    String
  district  String
  city      String
  state     String
  country   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id])

  @@map("address")
}

model CandidateProfile {
  fullName String
  birthday String
  cpf      String @id @unique
  rg       String
  phone    String
  userId   Int

  user User @relation(fields: [userId], references: [id])

  @@map("profileCandidate")
}
model Experience {
  idExperience     Int       @id @default(autoincrement())
  jobTitle         String
  companyName      String
  startDate        DateTime
  endDate          DateTime?
  isCurrent        Boolean
  responsibilities String
  userId           Int

  user User @relation(fields: [userId], references: [id])

  @@map("experience")
}
model Ability {
  idAbility       Int    @id @default(autoincrement())
  nameAbility     String
  experienceYears Int
  userId          Int
  user            User   @relation(fields: [userId], references: [id])

  @@map("ability")
}
